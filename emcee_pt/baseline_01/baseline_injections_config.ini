[workflow-inference]
; The inference configuration file(s) and any overrides to use for all of the
; injections.
; If no injection file is provided on the command line, injections will be
; drawn from the prior specified in the inference config file
config-files = bns_initial_positions.ini
               marginalized_phase.ini
               sampler.ini
               data_baseline.ini
; As with events sections in the standard workflow, you can specify
; config-overrides for the above file(s).
; Optionally, you may also specify the number of times to run inference on
; each injection by setting nruns. Each run will use different random seeds,
; and samples from the runs will be combined into a single posterior file for
; each injection. Not setting this is equivalent to nruns = 1
;nruns = 1

; For the injection workflow, we need to add an executable to create the
; injections. Optionally, we may also add executables to perform
; percentile-percentile (pp) tests.
[executables]
create_injections = ${which:pycbc_create_injections}

[create_injections]
; Options for the create_injections executable. Do not provide a config file
; nor the number of injections to create here. The inference
; config file is used for generating injections, and the number is determined
; by the command-line options given to make_inference_inj_workflow

[plot_posterior_summary]
; Adding plot-injection-parameters will cause a red line to be plotted on
; the posterior plots showing the injection parameters.
plot-injection-parameters =
; In order for the redline to be plotted in the right place, we have to
; provide an injection samples map. 
injection-samples-map = 'primary_mass(srcmass1, srcmass2):srcmass1'
             'secondary_mass(srcmass1, srcmass2):srcmass2'
             'primary_spin(srcmass1, srcmass2, spin1z, spin2z):spin1z'
             'secondary_spin(srcmass1, srcmass2, spin1z, spin2z):spin2z'
             'mchirp_from_mass1_mass2(srcmass1, srcmass2):srcmchirp'
; We do not need to provide any arguments, as the rest are set in
; workflow_config.ini.

[plot_posterior]
; Do the same for the full corner plots.
plot-injection-parameters =
injection-samples-map = 'primary_mass(srcmass1, srcmass2):srcmass1'
             'secondary_mass(srcmass1, srcmass2):srcmass2'
             'primary_spin(srcmass1, srcmass2, spin1z, spin2z):spin1z'
             'secondary_spin(srcmass1, srcmass2, spin1z, spin2z):spin2z'
             'mchirp_from_mass1_mass2(srcmass1, srcmass2):srcmchirp'
; We do not need to provide any arguments, as the rest are set in
; workflow_config.ini.


